/*
 * This file is generated by jOOQ.
 */
package com.github.kreker721425.shop.db.tables.daos;


import com.github.kreker721425.shop.db.tables.Order;
import com.github.kreker721425.shop.db.tables.records.OrderRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * Заказ
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderDao extends DAOImpl<OrderRecord, com.github.kreker721425.shop.db.tables.pojos.Order, Long> {

    /**
     * Create a new OrderDao without any configuration
     */
    public OrderDao() {
        super(Order.ORDER, com.github.kreker721425.shop.db.tables.pojos.Order.class);
    }

    /**
     * Create a new OrderDao with an attached configuration
     */
    public OrderDao(Configuration configuration) {
        super(Order.ORDER, com.github.kreker721425.shop.db.tables.pojos.Order.class, configuration);
    }

    @Override
    public Long getId(com.github.kreker721425.shop.db.tables.pojos.Order object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.github.kreker721425.shop.db.tables.pojos.Order> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Order.ORDER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.github.kreker721425.shop.db.tables.pojos.Order> fetchById(Long... values) {
        return fetch(Order.ORDER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.github.kreker721425.shop.db.tables.pojos.Order fetchOneById(Long value) {
        return fetchOne(Order.ORDER.ID, value);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.github.kreker721425.shop.db.tables.pojos.Order> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Order.ORDER.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.github.kreker721425.shop.db.tables.pojos.Order> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(Order.ORDER.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>price BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.github.kreker721425.shop.db.tables.pojos.Order> fetchRangeOfPrice(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Order.ORDER.PRICE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>price IN (values)</code>
     */
    public List<com.github.kreker721425.shop.db.tables.pojos.Order> fetchByPrice(BigDecimal... values) {
        return fetch(Order.ORDER.PRICE, values);
    }

    /**
     * Fetch records that have <code>client_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.github.kreker721425.shop.db.tables.pojos.Order> fetchRangeOfClientId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Order.ORDER.CLIENT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>client_id IN (values)</code>
     */
    public List<com.github.kreker721425.shop.db.tables.pojos.Order> fetchByClientId(Long... values) {
        return fetch(Order.ORDER.CLIENT_ID, values);
    }

    /**
     * Fetch records that have <code>bonus_count BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.github.kreker721425.shop.db.tables.pojos.Order> fetchRangeOfBonusCount(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Order.ORDER.BONUS_COUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>bonus_count IN (values)</code>
     */
    public List<com.github.kreker721425.shop.db.tables.pojos.Order> fetchByBonusCount(BigDecimal... values) {
        return fetch(Order.ORDER.BONUS_COUNT, values);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.github.kreker721425.shop.db.tables.pojos.Order> fetchRangeOfUserId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Order.ORDER.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<com.github.kreker721425.shop.db.tables.pojos.Order> fetchByUserId(Long... values) {
        return fetch(Order.ORDER.USER_ID, values);
    }
}
