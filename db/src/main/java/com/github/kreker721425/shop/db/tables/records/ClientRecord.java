/*
 * This file is generated by jOOQ.
 */
package com.github.kreker721425.shop.db.tables.records;


import com.github.kreker721425.shop.db.tables.Client;

import java.math.BigDecimal;
import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Клиенты
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClientRecord extends UpdatableRecordImpl<ClientRecord> implements Record5<Long, String, String, BigDecimal, LocalDate> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>shop.client.id</code>. Идентификатор клиента
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>shop.client.id</code>. Идентификатор клиента
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>shop.client.name</code>. Имя клиента
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>shop.client.name</code>. Имя клиента
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>shop.client.phone</code>. Номер телефона клиента
     */
    public void setPhone(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>shop.client.phone</code>. Номер телефона клиента
     */
    public String getPhone() {
        return (String) get(2);
    }

    /**
     * Setter for <code>shop.client.bonus_count</code>. Количество бонусных баллов клиента
     */
    public void setBonusCount(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>shop.client.bonus_count</code>. Количество бонусных баллов клиента
     */
    public BigDecimal getBonusCount() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>shop.client.birthday</code>. Дата рождения клиента
     */
    public void setBirthday(LocalDate value) {
        set(4, value);
    }

    /**
     * Getter for <code>shop.client.birthday</code>. Дата рождения клиента
     */
    public LocalDate getBirthday() {
        return (LocalDate) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, String, BigDecimal, LocalDate> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, String, String, BigDecimal, LocalDate> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Client.CLIENT.ID;
    }

    @Override
    public Field<String> field2() {
        return Client.CLIENT.NAME;
    }

    @Override
    public Field<String> field3() {
        return Client.CLIENT.PHONE;
    }

    @Override
    public Field<BigDecimal> field4() {
        return Client.CLIENT.BONUS_COUNT;
    }

    @Override
    public Field<LocalDate> field5() {
        return Client.CLIENT.BIRTHDAY;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getPhone();
    }

    @Override
    public BigDecimal component4() {
        return getBonusCount();
    }

    @Override
    public LocalDate component5() {
        return getBirthday();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getPhone();
    }

    @Override
    public BigDecimal value4() {
        return getBonusCount();
    }

    @Override
    public LocalDate value5() {
        return getBirthday();
    }

    @Override
    public ClientRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ClientRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public ClientRecord value3(String value) {
        setPhone(value);
        return this;
    }

    @Override
    public ClientRecord value4(BigDecimal value) {
        setBonusCount(value);
        return this;
    }

    @Override
    public ClientRecord value5(LocalDate value) {
        setBirthday(value);
        return this;
    }

    @Override
    public ClientRecord values(Long value1, String value2, String value3, BigDecimal value4, LocalDate value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ClientRecord
     */
    public ClientRecord() {
        super(Client.CLIENT);
    }

    /**
     * Create a detached, initialised ClientRecord
     */
    public ClientRecord(Long id, String name, String phone, BigDecimal bonusCount, LocalDate birthday) {
        super(Client.CLIENT);

        setId(id);
        setName(name);
        setPhone(phone);
        setBonusCount(bonusCount);
        setBirthday(birthday);
    }
}
