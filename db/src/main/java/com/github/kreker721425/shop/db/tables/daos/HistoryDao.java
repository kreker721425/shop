/*
 * This file is generated by jOOQ.
 */
package com.github.kreker721425.shop.db.tables.daos;


import com.github.kreker721425.shop.db.enums.OperationEnum;
import com.github.kreker721425.shop.db.enums.TableEnum;
import com.github.kreker721425.shop.db.tables.History;
import com.github.kreker721425.shop.db.tables.records.HistoryRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * История операций
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HistoryDao extends DAOImpl<HistoryRecord, com.github.kreker721425.shop.db.tables.pojos.History, Long> {

    /**
     * Create a new HistoryDao without any configuration
     */
    public HistoryDao() {
        super(History.HISTORY, com.github.kreker721425.shop.db.tables.pojos.History.class);
    }

    /**
     * Create a new HistoryDao with an attached configuration
     */
    public HistoryDao(Configuration configuration) {
        super(History.HISTORY, com.github.kreker721425.shop.db.tables.pojos.History.class, configuration);
    }

    @Override
    public Long getId(com.github.kreker721425.shop.db.tables.pojos.History object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.github.kreker721425.shop.db.tables.pojos.History> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(History.HISTORY.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.github.kreker721425.shop.db.tables.pojos.History> fetchById(Long... values) {
        return fetch(History.HISTORY.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.github.kreker721425.shop.db.tables.pojos.History fetchOneById(Long value) {
        return fetchOne(History.HISTORY.ID, value);
    }

    /**
     * Fetch records that have <code>table_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.github.kreker721425.shop.db.tables.pojos.History> fetchRangeOfTableName(TableEnum lowerInclusive, TableEnum upperInclusive) {
        return fetchRange(History.HISTORY.TABLE_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>table_name IN (values)</code>
     */
    public List<com.github.kreker721425.shop.db.tables.pojos.History> fetchByTableName(TableEnum... values) {
        return fetch(History.HISTORY.TABLE_NAME, values);
    }

    /**
     * Fetch records that have <code>operation BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.github.kreker721425.shop.db.tables.pojos.History> fetchRangeOfOperation(OperationEnum lowerInclusive, OperationEnum upperInclusive) {
        return fetchRange(History.HISTORY.OPERATION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>operation IN (values)</code>
     */
    public List<com.github.kreker721425.shop.db.tables.pojos.History> fetchByOperation(OperationEnum... values) {
        return fetch(History.HISTORY.OPERATION, values);
    }

    /**
     * Fetch records that have <code>old_value BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.github.kreker721425.shop.db.tables.pojos.History> fetchRangeOfOldValue(String lowerInclusive, String upperInclusive) {
        return fetchRange(History.HISTORY.OLD_VALUE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>old_value IN (values)</code>
     */
    public List<com.github.kreker721425.shop.db.tables.pojos.History> fetchByOldValue(String... values) {
        return fetch(History.HISTORY.OLD_VALUE, values);
    }

    /**
     * Fetch records that have <code>new_value BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.github.kreker721425.shop.db.tables.pojos.History> fetchRangeOfNewValue(String lowerInclusive, String upperInclusive) {
        return fetchRange(History.HISTORY.NEW_VALUE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>new_value IN (values)</code>
     */
    public List<com.github.kreker721425.shop.db.tables.pojos.History> fetchByNewValue(String... values) {
        return fetch(History.HISTORY.NEW_VALUE, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.github.kreker721425.shop.db.tables.pojos.History> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(History.HISTORY.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.github.kreker721425.shop.db.tables.pojos.History> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(History.HISTORY.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.github.kreker721425.shop.db.tables.pojos.History> fetchRangeOfUserId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(History.HISTORY.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<com.github.kreker721425.shop.db.tables.pojos.History> fetchByUserId(Long... values) {
        return fetch(History.HISTORY.USER_ID, values);
    }
}
