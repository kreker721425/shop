/*
 * This file is generated by jOOQ.
 */
package com.github.kreker721425.shop.db.tables.pojos;


import com.github.kreker721425.shop.db.enums.OperationEnum;
import com.github.kreker721425.shop.db.enums.TableEnum;

import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * История операций
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class History implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long          id;
    private TableEnum     tableName;
    private OperationEnum operation;
    private String        oldValue;
    private String        newValue;
    private LocalDateTime createdAt;
    private Long          userId;

    public History() {}

    public History(History value) {
        this.id = value.id;
        this.tableName = value.tableName;
        this.operation = value.operation;
        this.oldValue = value.oldValue;
        this.newValue = value.newValue;
        this.createdAt = value.createdAt;
        this.userId = value.userId;
    }

    public History(
        Long          id,
        TableEnum     tableName,
        OperationEnum operation,
        String        oldValue,
        String        newValue,
        LocalDateTime createdAt,
        Long          userId
    ) {
        this.id = id;
        this.tableName = tableName;
        this.operation = operation;
        this.oldValue = oldValue;
        this.newValue = newValue;
        this.createdAt = createdAt;
        this.userId = userId;
    }

    /**
     * Getter for <code>shop.history.id</code>. Идентификатор
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>shop.history.id</code>. Идентификатор
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>shop.history.table_name</code>. Название таблицы
     */
    public TableEnum getTableName() {
        return this.tableName;
    }

    /**
     * Setter for <code>shop.history.table_name</code>. Название таблицы
     */
    public void setTableName(TableEnum tableName) {
        this.tableName = tableName;
    }

    /**
     * Getter for <code>shop.history.operation</code>. Операция
     */
    public OperationEnum getOperation() {
        return this.operation;
    }

    /**
     * Setter for <code>shop.history.operation</code>. Операция
     */
    public void setOperation(OperationEnum operation) {
        this.operation = operation;
    }

    /**
     * Getter for <code>shop.history.old_value</code>. Старое значение
     */
    public String getOldValue() {
        return this.oldValue;
    }

    /**
     * Setter for <code>shop.history.old_value</code>. Старое значение
     */
    public void setOldValue(String oldValue) {
        this.oldValue = oldValue;
    }

    /**
     * Getter for <code>shop.history.new_value</code>. Новое значение
     */
    public String getNewValue() {
        return this.newValue;
    }

    /**
     * Setter for <code>shop.history.new_value</code>. Новое значение
     */
    public void setNewValue(String newValue) {
        this.newValue = newValue;
    }

    /**
     * Getter for <code>shop.history.created_at</code>. Время создания
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>shop.history.created_at</code>. Время создания
     */
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for <code>shop.history.user_id</code>. Идентификатор пользователя
     */
    public Long getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>shop.history.user_id</code>. Идентификатор пользователя
     */
    public void setUserId(Long userId) {
        this.userId = userId;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("History (");

        sb.append(id);
        sb.append(", ").append(tableName);
        sb.append(", ").append(operation);
        sb.append(", ").append(oldValue);
        sb.append(", ").append(newValue);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(userId);

        sb.append(")");
        return sb.toString();
    }
}
