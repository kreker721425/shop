/*
 * This file is generated by jOOQ.
 */
package com.github.kreker721425.shop.db.tables.records;


import com.github.kreker721425.shop.db.enums.OperationEnum;
import com.github.kreker721425.shop.db.enums.TableEnum;
import com.github.kreker721425.shop.db.tables.History;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * История операций
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HistoryRecord extends UpdatableRecordImpl<HistoryRecord> implements Record7<Long, TableEnum, OperationEnum, String, String, LocalDateTime, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>shop.history.id</code>. Идентификатор
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>shop.history.id</code>. Идентификатор
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>shop.history.table_name</code>. Название таблицы
     */
    public void setTableName(TableEnum value) {
        set(1, value);
    }

    /**
     * Getter for <code>shop.history.table_name</code>. Название таблицы
     */
    public TableEnum getTableName() {
        return (TableEnum) get(1);
    }

    /**
     * Setter for <code>shop.history.operation</code>. Операция
     */
    public void setOperation(OperationEnum value) {
        set(2, value);
    }

    /**
     * Getter for <code>shop.history.operation</code>. Операция
     */
    public OperationEnum getOperation() {
        return (OperationEnum) get(2);
    }

    /**
     * Setter for <code>shop.history.old_value</code>. Старое значение
     */
    public void setOldValue(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>shop.history.old_value</code>. Старое значение
     */
    public String getOldValue() {
        return (String) get(3);
    }

    /**
     * Setter for <code>shop.history.new_value</code>. Новое значение
     */
    public void setNewValue(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>shop.history.new_value</code>. Новое значение
     */
    public String getNewValue() {
        return (String) get(4);
    }

    /**
     * Setter for <code>shop.history.created_at</code>. Время создания
     */
    public void setCreatedAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>shop.history.created_at</code>. Время создания
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>shop.history.user_id</code>. Идентификатор пользователя
     */
    public void setUserId(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>shop.history.user_id</code>. Идентификатор пользователя
     */
    public Long getUserId() {
        return (Long) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, TableEnum, OperationEnum, String, String, LocalDateTime, Long> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, TableEnum, OperationEnum, String, String, LocalDateTime, Long> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return History.HISTORY.ID;
    }

    @Override
    public Field<TableEnum> field2() {
        return History.HISTORY.TABLE_NAME;
    }

    @Override
    public Field<OperationEnum> field3() {
        return History.HISTORY.OPERATION;
    }

    @Override
    public Field<String> field4() {
        return History.HISTORY.OLD_VALUE;
    }

    @Override
    public Field<String> field5() {
        return History.HISTORY.NEW_VALUE;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return History.HISTORY.CREATED_AT;
    }

    @Override
    public Field<Long> field7() {
        return History.HISTORY.USER_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public TableEnum component2() {
        return getTableName();
    }

    @Override
    public OperationEnum component3() {
        return getOperation();
    }

    @Override
    public String component4() {
        return getOldValue();
    }

    @Override
    public String component5() {
        return getNewValue();
    }

    @Override
    public LocalDateTime component6() {
        return getCreatedAt();
    }

    @Override
    public Long component7() {
        return getUserId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public TableEnum value2() {
        return getTableName();
    }

    @Override
    public OperationEnum value3() {
        return getOperation();
    }

    @Override
    public String value4() {
        return getOldValue();
    }

    @Override
    public String value5() {
        return getNewValue();
    }

    @Override
    public LocalDateTime value6() {
        return getCreatedAt();
    }

    @Override
    public Long value7() {
        return getUserId();
    }

    @Override
    public HistoryRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public HistoryRecord value2(TableEnum value) {
        setTableName(value);
        return this;
    }

    @Override
    public HistoryRecord value3(OperationEnum value) {
        setOperation(value);
        return this;
    }

    @Override
    public HistoryRecord value4(String value) {
        setOldValue(value);
        return this;
    }

    @Override
    public HistoryRecord value5(String value) {
        setNewValue(value);
        return this;
    }

    @Override
    public HistoryRecord value6(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public HistoryRecord value7(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public HistoryRecord values(Long value1, TableEnum value2, OperationEnum value3, String value4, String value5, LocalDateTime value6, Long value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached HistoryRecord
     */
    public HistoryRecord() {
        super(History.HISTORY);
    }

    /**
     * Create a detached, initialised HistoryRecord
     */
    public HistoryRecord(Long id, TableEnum tableName, OperationEnum operation, String oldValue, String newValue, LocalDateTime createdAt, Long userId) {
        super(History.HISTORY);

        setId(id);
        setTableName(tableName);
        setOperation(operation);
        setOldValue(oldValue);
        setNewValue(newValue);
        setCreatedAt(createdAt);
        setUserId(userId);
    }
}
