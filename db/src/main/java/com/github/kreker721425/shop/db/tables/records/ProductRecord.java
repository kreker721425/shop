/*
 * This file is generated by jOOQ.
 */
package com.github.kreker721425.shop.db.tables.records;


import com.github.kreker721425.shop.db.tables.Product;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Продукт
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductRecord extends UpdatableRecordImpl<ProductRecord> implements Record6<Long, String, Long, String, BigDecimal, BigDecimal> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>shop.product.id</code>. Идентификатор
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>shop.product.id</code>. Идентификатор
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>shop.product.name</code>. Название
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>shop.product.name</code>. Название
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>shop.product.count</code>. Количество
     */
    public void setCount(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>shop.product.count</code>. Количество
     */
    public Long getCount() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>shop.product.description</code>. Описание
     */
    public void setDescription(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>shop.product.description</code>. Описание
     */
    public String getDescription() {
        return (String) get(3);
    }

    /**
     * Setter for <code>shop.product.price</code>. Цена
     */
    public void setPrice(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>shop.product.price</code>. Цена
     */
    public BigDecimal getPrice() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>shop.product.price_discount</code>. Цена продукта со скидкой
     */
    public void setPriceDiscount(BigDecimal value) {
        set(5, value);
    }

    /**
     * Getter for <code>shop.product.price_discount</code>. Цена продукта со скидкой
     */
    public BigDecimal getPriceDiscount() {
        return (BigDecimal) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, String, Long, String, BigDecimal, BigDecimal> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, String, Long, String, BigDecimal, BigDecimal> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Product.PRODUCT.ID;
    }

    @Override
    public Field<String> field2() {
        return Product.PRODUCT.NAME;
    }

    @Override
    public Field<Long> field3() {
        return Product.PRODUCT.COUNT;
    }

    @Override
    public Field<String> field4() {
        return Product.PRODUCT.DESCRIPTION;
    }

    @Override
    public Field<BigDecimal> field5() {
        return Product.PRODUCT.PRICE;
    }

    @Override
    public Field<BigDecimal> field6() {
        return Product.PRODUCT.PRICE_DISCOUNT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Long component3() {
        return getCount();
    }

    @Override
    public String component4() {
        return getDescription();
    }

    @Override
    public BigDecimal component5() {
        return getPrice();
    }

    @Override
    public BigDecimal component6() {
        return getPriceDiscount();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Long value3() {
        return getCount();
    }

    @Override
    public String value4() {
        return getDescription();
    }

    @Override
    public BigDecimal value5() {
        return getPrice();
    }

    @Override
    public BigDecimal value6() {
        return getPriceDiscount();
    }

    @Override
    public ProductRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ProductRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public ProductRecord value3(Long value) {
        setCount(value);
        return this;
    }

    @Override
    public ProductRecord value4(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public ProductRecord value5(BigDecimal value) {
        setPrice(value);
        return this;
    }

    @Override
    public ProductRecord value6(BigDecimal value) {
        setPriceDiscount(value);
        return this;
    }

    @Override
    public ProductRecord values(Long value1, String value2, Long value3, String value4, BigDecimal value5, BigDecimal value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProductRecord
     */
    public ProductRecord() {
        super(Product.PRODUCT);
    }

    /**
     * Create a detached, initialised ProductRecord
     */
    public ProductRecord(Long id, String name, Long count, String description, BigDecimal price, BigDecimal priceDiscount) {
        super(Product.PRODUCT);

        setId(id);
        setName(name);
        setCount(count);
        setDescription(description);
        setPrice(price);
        setPriceDiscount(priceDiscount);
    }
}
