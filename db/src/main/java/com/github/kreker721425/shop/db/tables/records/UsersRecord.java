/*
 * This file is generated by jOOQ.
 */
package com.github.kreker721425.shop.db.tables.records;


import com.github.kreker721425.shop.db.enums.UserRoleEnum;
import com.github.kreker721425.shop.db.enums.UserStatusEnum;
import com.github.kreker721425.shop.db.tables.Users;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Пользователь
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> implements Record6<Long, String, String, String, UserRoleEnum, UserStatusEnum> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>shop.users.id</code>. Идентификатор
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>shop.users.id</code>. Идентификатор
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>shop.users.name</code>. Имя
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>shop.users.name</code>. Имя
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>shop.users.login</code>. Логин
     */
    public void setLogin(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>shop.users.login</code>. Логин
     */
    public String getLogin() {
        return (String) get(2);
    }

    /**
     * Setter for <code>shop.users.password</code>. Пароль
     */
    public void setPassword(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>shop.users.password</code>. Пароль
     */
    public String getPassword() {
        return (String) get(3);
    }

    /**
     * Setter for <code>shop.users.role</code>. Роль
     */
    public void setRole(UserRoleEnum value) {
        set(4, value);
    }

    /**
     * Getter for <code>shop.users.role</code>. Роль
     */
    public UserRoleEnum getRole() {
        return (UserRoleEnum) get(4);
    }

    /**
     * Setter for <code>shop.users.status</code>. Статус
     */
    public void setStatus(UserStatusEnum value) {
        set(5, value);
    }

    /**
     * Getter for <code>shop.users.status</code>. Статус
     */
    public UserStatusEnum getStatus() {
        return (UserStatusEnum) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, String, String, String, UserRoleEnum, UserStatusEnum> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, String, String, String, UserRoleEnum, UserStatusEnum> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Users.USERS.ID;
    }

    @Override
    public Field<String> field2() {
        return Users.USERS.NAME;
    }

    @Override
    public Field<String> field3() {
        return Users.USERS.LOGIN;
    }

    @Override
    public Field<String> field4() {
        return Users.USERS.PASSWORD;
    }

    @Override
    public Field<UserRoleEnum> field5() {
        return Users.USERS.ROLE;
    }

    @Override
    public Field<UserStatusEnum> field6() {
        return Users.USERS.STATUS;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getLogin();
    }

    @Override
    public String component4() {
        return getPassword();
    }

    @Override
    public UserRoleEnum component5() {
        return getRole();
    }

    @Override
    public UserStatusEnum component6() {
        return getStatus();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getLogin();
    }

    @Override
    public String value4() {
        return getPassword();
    }

    @Override
    public UserRoleEnum value5() {
        return getRole();
    }

    @Override
    public UserStatusEnum value6() {
        return getStatus();
    }

    @Override
    public UsersRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UsersRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public UsersRecord value3(String value) {
        setLogin(value);
        return this;
    }

    @Override
    public UsersRecord value4(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UsersRecord value5(UserRoleEnum value) {
        setRole(value);
        return this;
    }

    @Override
    public UsersRecord value6(UserStatusEnum value) {
        setStatus(value);
        return this;
    }

    @Override
    public UsersRecord values(Long value1, String value2, String value3, String value4, UserRoleEnum value5, UserStatusEnum value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(Long id, String name, String login, String password, UserRoleEnum role, UserStatusEnum status) {
        super(Users.USERS);

        setId(id);
        setName(name);
        setLogin(login);
        setPassword(password);
        setRole(role);
        setStatus(status);
    }
}
